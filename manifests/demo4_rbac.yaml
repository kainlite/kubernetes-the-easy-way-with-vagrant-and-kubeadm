---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: demo
  name: demo
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: demo2
  name: demo2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sam
  namespace: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sam
  namespace: demo2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: demo
  name: cr
rules:
- apiGroups: [""]
  resources: ["secrets", "pods", "deployments"]
  verbs: ["list", "get", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: super
  namespace: demo
subjects:
- kind: ServiceAccount
  name: sam
roleRef:
  kind: ClusterRole
  name: cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: demo2
  name: rr
rules:
- apiGroups: [""]
  resources: ["deployments"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: limited
  namespace: demo2
subjects:
- kind: ServiceAccount
  name: sam
roleRef:
  kind: Role
  name: rr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: demo
  name: demo
  namespace: demo
spec:
  containers:
  - image: nginx
    name: demo
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  serviceAccountName: sam
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: demo2
  name: demo2
  namespace: demo2
spec:
  containers:
  - image: nginx
    name: demo2
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  serviceAccountName: sam
